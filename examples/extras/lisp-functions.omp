; OM File Header - Saved 2023/06/08 20:31:22
; (7.02 :patc (om-make-point 27 99) (om-make-point 50 50) (om-make-point 717 455) "" 183 0 "2023/06/06 13:06:19" "2023/06/08 20:28:05")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "lisp-functions" (quote ((let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 58 67) (om-make-point 91 30) (list 0 1 2 3 4 5) "(0 1 2 3 4 5)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "permutations" (om-load-lisp-abs-nondeterpatch "permutations" 7.02 ";;; ALL-PERMUTATIONS ;;;$$(lambda (list)$ (let ((VarArray (screamer-user::list-of-members-ofv (length list) list)))$$(s::assert! (apply 's::/=v VarArray))$$(reverse (s::solution VarArray (s::static-ordering #'s::linear-force)))))") (quote ((om-load-inputfun (quote input-funbox) "" "LIST" nil))) (om-make-point 59 105) nil (list (list 0 1 2 3 4 5)) nil "permutations"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 414 180) (quote "In this library it is also possible to use functions written in lisp. $With this feature we can access screamer functions that has not $been implemented yet in the library. $$In this example we use the screamer functions a-members-ofv $(that is different from a-member-of), assert, solution, $static-ordering and linear-force to calculate all permutations$of a given list. $$It is not necessary to include one-value, all-values or print-values$since it's alerady implemented. ") "" (om-make-point 239 37) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((0 0 1 0 nil 0))) nil 7.02))
